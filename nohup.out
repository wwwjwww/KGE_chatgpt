The tokenizer class you load from this checkpoint is not the same type as the class this function is called from. It may result in unexpected tokenization. 
The tokenizer class you load from this checkpoint is 'LLaMATokenizer'. 
The class this function is called from is 'LlamaTokenizer'.
You are using the default legacy behaviour of the <class 'transformers.models.llama.tokenization_llama.LlamaTokenizer'>. If you see this, DO NOT PANIC! This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thouroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565
Loading checkpoint shards:   0%|          | 0/33 [00:00<?, ?it/s]Loading checkpoint shards:   3%|▎         | 1/33 [00:00<00:20,  1.56it/s]Loading checkpoint shards:   6%|▌         | 2/33 [00:01<00:19,  1.59it/s]Loading checkpoint shards:   9%|▉         | 3/33 [00:02<00:21,  1.41it/s]Loading checkpoint shards:  12%|█▏        | 4/33 [00:02<00:20,  1.38it/s]Loading checkpoint shards:  15%|█▌        | 5/33 [00:03<00:20,  1.36it/s]Loading checkpoint shards:  18%|█▊        | 6/33 [00:04<00:19,  1.36it/s]Loading checkpoint shards:  21%|██        | 7/33 [00:05<00:20,  1.30it/s]Loading checkpoint shards:  24%|██▍       | 8/33 [00:05<00:18,  1.32it/s]Loading checkpoint shards:  27%|██▋       | 9/33 [00:06<00:18,  1.32it/s]Loading checkpoint shards:  30%|███       | 10/33 [00:07<00:17,  1.32it/s]Loading checkpoint shards:  33%|███▎      | 11/33 [00:08<00:17,  1.29it/s]Loading checkpoint shards:  36%|███▋      | 12/33 [00:08<00:15,  1.31it/s]Loading checkpoint shards:  39%|███▉      | 13/33 [00:09<00:15,  1.30it/s]Loading checkpoint shards:  42%|████▏     | 14/33 [00:10<00:14,  1.29it/s]Loading checkpoint shards:  45%|████▌     | 15/33 [00:11<00:13,  1.31it/s]Loading checkpoint shards:  48%|████▊     | 16/33 [00:11<00:11,  1.42it/s]Loading checkpoint shards:  52%|█████▏    | 17/33 [00:12<00:10,  1.47it/s]Loading checkpoint shards:  55%|█████▍    | 18/33 [00:13<00:10,  1.45it/s]Loading checkpoint shards:  58%|█████▊    | 19/33 [00:13<00:09,  1.49it/s]Loading checkpoint shards:  61%|██████    | 20/33 [00:14<00:08,  1.52it/s]Loading checkpoint shards:  64%|██████▎   | 21/33 [00:15<00:08,  1.42it/s]Loading checkpoint shards:  67%|██████▋   | 22/33 [00:15<00:07,  1.41it/s]Loading checkpoint shards:  70%|██████▉   | 23/33 [00:16<00:07,  1.36it/s]Loading checkpoint shards:  73%|███████▎  | 24/33 [00:17<00:06,  1.37it/s]Loading checkpoint shards:  76%|███████▌  | 25/33 [00:18<00:05,  1.39it/s]Loading checkpoint shards:  79%|███████▉  | 26/33 [00:18<00:04,  1.45it/s]Loading checkpoint shards:  82%|████████▏ | 27/33 [00:19<00:03,  1.52it/s]Loading checkpoint shards:  85%|████████▍ | 28/33 [00:19<00:03,  1.58it/s]Loading checkpoint shards:  88%|████████▊ | 29/33 [00:20<00:02,  1.59it/s]Loading checkpoint shards:  91%|█████████ | 30/33 [00:21<00:01,  1.50it/s]Loading checkpoint shards:  94%|█████████▍| 31/33 [00:22<00:01,  1.46it/s]Loading checkpoint shards:  97%|█████████▋| 32/33 [00:22<00:00,  1.45it/s]Loading checkpoint shards: 100%|██████████| 33/33 [00:23<00:00,  1.36it/s]Loading checkpoint shards: 100%|██████████| 33/33 [00:23<00:00,  1.40it/s]
Traceback (most recent call last):
  File "llama_embed.py", line 72, in <module>
    embed = model.generate(inputs.input_ids, max_length=64, output_hidden_states=True)
  File "/home/jwwang/anaconda3/envs/new/lib/python3.8/site-packages/transformers/modeling_utils.py", line 2053, in to
    return super().to(*args, **kwargs)
  File "/home/jwwang/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1145, in to
    return self._apply(convert)
  File "/home/jwwang/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 797, in _apply
    module._apply(fn)
  File "/home/jwwang/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 797, in _apply
    module._apply(fn)
  File "/home/jwwang/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 797, in _apply
    module._apply(fn)
  [Previous line repeated 2 more times]
  File "/home/jwwang/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 820, in _apply
    param_applied = fn(param)
  File "/home/jwwang/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1143, in convert
    return t.to(device, dtype if t.is_floating_point() or t.is_complex() else None, non_blocking)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 86.00 MiB (GPU 0; 23.69 GiB total capacity; 6.42 GiB already allocated; 27.81 MiB free; 6.42 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
